name: Build and Release Blog + Deployer

on:
  push:
    branches:
      - main
    paths:
      - 'blog/**'
      - 'deployer/**'
      - '.github/workflows/**'

  workflow_dispatch:

permissions:
  contents: write  # 必需：用于推送 tag 和创建 release

jobs:
  build-blog:
    name: Build and Release Blog
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect blog directory change
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            blog:
              - 'blog/**'

      - name: Exit if no blog changes
        if: steps.changes.outputs.blog != 'true'
        run: echo "No changes in blog/, skipping build."

      - name: Set up Git identity
        if: steps.changes.outputs.blog == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Set up Node.js
        if: steps.changes.outputs.blog == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install pnpm
        if: steps.changes.outputs.blog == 'true'
        run: npm install -g pnpm

      - name: Install dependencies
        if: steps.changes.outputs.blog == 'true'
        working-directory: blog
        run: |
          pnpm install
          if [ -f themes/next/package.json ]; then
            cd themes/next
            pnpm install || true
          fi

      - name: Build static site
        if: steps.changes.outputs.blog == 'true'
        working-directory: blog
        run: pnpm run build

      - name: Check built files
        if: steps.changes.outputs.blog == 'true'
        run: ls -R blog/public

      - name: Zip built blog
        if: steps.changes.outputs.blog == 'true'
        working-directory: blog/public
        run: zip -r $GITHUB_WORKSPACE/blog-release.zip .

      - name: Force-update blog-main tag
        if: steps.changes.outputs.blog == 'true'
        run: |
          git tag -f blog-main
          git push origin blog-main --force

      - name: Create or Update GitHub Release
        if: steps.changes.outputs.blog == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: blog-main
          name: Blog Release (main)
          files: blog-release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger Remote Deploy via Webhook
        if: steps.changes.outputs.blog == 'true'
        run: |
          curl -X POST "${{ secrets.DEPLOY_WEBHOOK_URL }}?token=${{ secrets.DEPLOY_WEBHOOK_TOKEN }}" \
          || echo "⚠️ Webhook failed, continuing anyway."

  build-deployer:
    name: Build and Push Deployer Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref_type != 'tag'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect deployer directory change
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            deployer:
              - 'deployer/**'

      - name: Log in to GitHub Container Registry
        if: steps.changes.outputs.deployer == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        if: steps.changes.outputs.deployer == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./deployer
          file: ./deployer/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/deployer:latest
